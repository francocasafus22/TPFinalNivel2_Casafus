<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P6MuLbtM9PwKAAAAAElFTkSuQmCC
</value>
  </data>
</root>